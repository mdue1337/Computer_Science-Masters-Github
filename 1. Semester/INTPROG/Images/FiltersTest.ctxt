#BlueJ class context
comment0.target=FiltersTest
comment0.text=\r\n\ This\ class\ contains\ methods\ for\ automatic\ testing\ of\ Images.\r\n\ \r\n\ @author\ Nikolaj\ Ignatieff\ Schwartzbach.\r\n\ @version\ 2020-08-12.\r\n
comment1.params=
comment1.target=FiltersTest()
comment10.params=
comment10.target=void\ testNoise()
comment10.text=\r\n\ Tests\ the\ implementation\ of\ noise()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ Note\:\ this\ test\ is\ probabilistic\ in\ nature.\r\n\ Note\:\ this\ test\ does\ NOT\ provide\ side-by-side\ comparison.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment11.params=
comment11.target=void\ testResize()
comment11.text=\r\n\ Tests\ the\ implementation\ of\ resize()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment12.params=
comment12.target=void\ testRotateAC()
comment12.text=\r\n\ Tests\ the\ implementation\ of\ rotateAC()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment13.params=
comment13.target=void\ testIncreaseContrast()
comment13.text=\r\n\ Tests\ the\ implementation\ of\ blur()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment2.params=
comment2.target=void\ testAll()
comment2.text=\r\n\ Tests\ all\ 10\ methods\ against\ reference\ images.\r\n\ Will\ output\ for\ each\ method\ whether\ or\ not\ the\ test\ was\ successful.\r\n\ \r\n\ If\ a\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console\ (for\ each\ method).\r\n\ \r\n\ Will\ not\ render\ side-by-side\ comparisons.\r\n\ \r\n\ @return\ True,\ if\ all\ tests\ succeed,\ and\ false\ otherwise.\r\n
comment3.params=
comment3.target=void\ testBrighten()
comment3.text=\r\n\ Tests\ the\ implementation\ of\ brighten()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment4.params=
comment4.target=void\ testDarken()
comment4.text=\r\n\ Tests\ the\ implementation\ of\ darken()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment5.params=
comment5.target=void\ testInvert()
comment5.text=\r\n\ Tests\ the\ implementation\ of\ invert()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment6.params=
comment6.target=void\ testMirror()
comment6.text=\r\n\ Tests\ the\ implementation\ of\ mirror()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment7.params=
comment7.target=void\ testFlip()
comment7.text=\r\n\ Tests\ the\ implementation\ of\ flip()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment8.params=
comment8.target=void\ testRotate()
comment8.text=\r\n\ Tests\ the\ implementation\ of\ rotate()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
comment9.params=
comment9.target=void\ testBlur()
comment9.text=\r\n\ Tests\ the\ implementation\ of\ blur()\ against\ a\ reference\ image.\r\n\ Will\ provide\ side-by-side\ view\ of\ expected/received\ images\ for\ easy\ visual\ comparison.\r\n\ If\ the\ test\ fails,\ only\ the\ first\ five\ discrepancies\ will\ be\ printed\ to\ the\ console.\r\n\ \r\n\ @return\ True,\ if\ the\ test\ succeeds,\ and\ false\ otherwise.\r\n
numComments=14
