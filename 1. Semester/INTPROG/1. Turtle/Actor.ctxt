#BlueJ class context
comment0.target=Actor
comment0.text=\r\n\ An\ Actor\ object\ is\ an\ object\ which\ can\ move\ around\ on\ the\ screen\ using\ Turtle\ Graphics.\r\n\ The\ class\ is\ abstract\ so\ it\ is\ not\ possible\ to\ instantiate\ it\ directly.\r\n\ \r\n\ Instead\ the\ Turtle\ class\ can\ be\ instantiated.\r\n\ \r\n\ @author\ Nikolaj\ Ignatieff\ Schwartzbach.\r\n\ @version\ 2020-08-12.\r\n
comment1.params=x\ y\ theta
comment1.target=Actor(int,\ int,\ double)
comment1.text=\r\n\ Creates\ a\ new\ Actor\ object\ in\ a\ Canvas,\ at\ a\ position\ (x,y)\ with\ angle\ theta\ (radians).\r\n\ @param\ \ \ w\ \ \ \ \ \ \ The\ Canvas\ object\ to\ add\ this\ Actor\ to.\r\n\ @param\ \ \ x\ \ \ \ \ \ \ The\ x-coordinate\ of\ this\ Actor.\r\n\ @param\ \ \ y\ \ \ \ \ \ \ The\ y-coordinate\ of\ this\ Actor.\r\n\ @param\ \ \ theta\ \ \ The\ angle\ (in\ radians)\ of\ this\ Actor.\r\n
comment10.params=
comment10.target=void\ penUp()
comment10.text=\r\n\ Instructs\ this\ Actor\ to\ stop\ drawing.\r\n
comment11.params=
comment11.target=void\ penDown()
comment11.text=\r\n\ Instructs\ this\ Actor\ to\ start\ drawing.\r\n
comment12.params=degrees
comment12.target=void\ turn(double)
comment12.text=\r\n\ Instructs\ this\ Actor\ to\ rotate\ a\ specified\ number\ of\ degrees\ (clockwise).\r\n\ @param\ \ \ degrees\ \ \ \ \ The\ number\ of\ degrees\ this\ Actor\ rotates.\r\n
comment13.params=degrees
comment13.target=void\ turnTo(double)
comment13.text=\r\n\ Sets\ the\ rotation\ of\ this\ Actor\ to\ a\ specified\ number\ of\ degrees.\r\n\ @param\ \ \ degrees\ \ \ \ \ The\ new\ rotation\ (in\ degrees)\ of\ this\ Actor.\r\n
comment14.params=newX\ newY
comment14.target=void\ moveTo(double,\ double)
comment14.text=\r\n\ Moves\ this\ Actor\ to\ a\ specified\ position.\ Will\ draw\ if\ penDown.\r\n\ @param\ \ \ newX\ \ \ \ The\ new\ x-coordinate\ (in\ pixels)\ of\ this\ Actor.\r\n\ @param\ \ \ newY\ \ \ \ The\ new\ y-coordinate\ (in\ pixels)\ of\ this\ Actor.\r\n
comment15.params=distance
comment15.target=void\ move(double)
comment15.text=\r\n\ Moves\ this\ Actor\ a\ specified\ number\ of\ units\ in\ the\ direction\ it\ is\ facing.\ \r\n\ If\ distance\ is\ negative\ it\ will\ move\ backwards.\r\n\ Will\ draw\ if\ penDown.\r\n\ @param\ \ \ distance\ \ \ \ The\ distance\ for\ this\ Actor\ to\ travel\ (in\ pixels).\r\n
comment16.params=col
comment16.target=void\ setColor(java.lang.String)
comment16.text=\r\n\ Sets\ the\ color\ to\ the\ specified\ color.\r\n\ Allowed\ values\ are\:\r\n\ \ -\ "black"\r\n\ \ -\ "red"\r\n\ \ -\ "blue"\r\n\ \ -\ "yellow"\r\n\ \ -\ "green"\r\n\ \ -\ "magenta"\r\n\ \ -\ any\ hex\ color,\ that\ is\ "\#RRGGBB"\r\n\ \ \r\n\ \ Will\ change\ the\ color\ to\ Black\ if\ an\ invalid\ String\ is\ chosen.\r\n\ \ \r\n\ \ @param\ \ col\ \ \ \ \ A\ String\ representing\ the\ new\ color\ of\ this\ Actor.\r\n
comment17.params=
comment17.target=void\ pause()
comment17.text=\r\n\ This\ method\ pauses\ the\ current\ thread\ for\ a\ short\ duration\ of\ time\ (100ms).\r\n\ This\ allows\ the\ user\ to\ see\ step-by-step\ how\ the\ turtle\ acts.\r\n
comment18.params=milliseconds
comment18.target=void\ pause(long)
comment18.text=\r\n\ This\ method\ pauses\ the\ current\ thread\ for\ a\ specified\ duration\ of\ time.\r\n\ This\ allows\ the\ user\ to\ see\ step-by-step\ how\ the\ turtle\ acts.\r\n\ @param\ milliseconds\ The\ time,\ in\ milliseconds,\ to\ pause.\r\n
comment2.params=
comment2.target=boolean\ isPenDown()
comment2.text=\r\n\ Checks\ whether\ or\ not\ this\ Actor\ is\ currently\ drawing.\r\n\ @return\ \ A\ boolean\ representing\ whether\ or\ not\ this\ Actor\ is\ currently\ drawing.\r\n
comment3.params=
comment3.target=double\ getX()
comment3.text=\r\n\ Returns\ the\ x-coordinate\ (in\ pixels)\ of\ this\ Actor.\r\n\ @return\ \ The\ x-coordinate\ (in\ pixels)\ of\ this\ Actor.\r\n
comment4.params=
comment4.target=double\ getY()
comment4.text=\r\n\ Returns\ the\ y-coordinate\ (in\ pixels)\ of\ this\ Actor.\r\n\ @return\ \ The\ x-coordinate\ (in\ pixels)\ of\ this\ Actor.\r\n
comment5.params=
comment5.target=double\ getAngle()
comment5.text=\r\n\ Returns\ the\ angle\ that\ this\ Actor\ is\ facing\ (in\ degrees).\ Will\ always\ be\ in\ the\ interval\ [0,\ 360).\r\n\ @return\ \ The\ angle\ in\ degrees\ of\ this\ Actor.\r\n
comment6.params=
comment6.target=int\ getColor()
comment6.text=\r\n\ Returns\ the\ current\ color\ of\ this\ Actor\ (as\ an\ integer\ to\ be\ used\ in\ setColor()).\r\n\ @return\ \ An\ integer\ representing\ the\ current\ color\ of\ this\ Actor.\r\n
comment7.params=
comment7.target=java.awt.Color\ getColorInstance()
comment7.text=\r\n\ Returns\ the\ current\ Color\ object\ of\ this\ Actor.\r\n\ @return\ \ A\ Color\ object\ representing\ the\ color\ that\ this\ Actor\ draws\ with.\r\n
comment8.params=
comment8.target=Canvas\ getCanvas()
comment8.text=\r\n\ Returns\ the\ Canvas.\r\n\ @return\ \ A\ Canvas\ object\ representing\ the\ canvas\ in\ which\ this\ Actor\ resides.\r\n
comment9.params=
comment9.target=void\ addToCanvas()
comment9.text=\r\n\ Adds\ this\ Actor\ to\ the\ Canvas.\r\n
numComments=19
